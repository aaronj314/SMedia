package com.smedia.sqzserver.dataservice.model.base;

import java.util.ArrayList;
import java.util.List;

public class WatchFolderPluginExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public WatchFolderPluginExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPluginIdIsNull() {
            addCriterion("PluginId is null");
            return (Criteria) this;
        }

        public Criteria andPluginIdIsNotNull() {
            addCriterion("PluginId is not null");
            return (Criteria) this;
        }

        public Criteria andPluginIdEqualTo(String value) {
            addCriterion("PluginId =", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdNotEqualTo(String value) {
            addCriterion("PluginId <>", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdGreaterThan(String value) {
            addCriterion("PluginId >", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdGreaterThanOrEqualTo(String value) {
            addCriterion("PluginId >=", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdLessThan(String value) {
            addCriterion("PluginId <", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdLessThanOrEqualTo(String value) {
            addCriterion("PluginId <=", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdLike(String value) {
            addCriterion("PluginId like", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdNotLike(String value) {
            addCriterion("PluginId not like", value, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdIn(List<String> values) {
            addCriterion("PluginId in", values, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdNotIn(List<String> values) {
            addCriterion("PluginId not in", values, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdBetween(String value1, String value2) {
            addCriterion("PluginId between", value1, value2, "pluginId");
            return (Criteria) this;
        }

        public Criteria andPluginIdNotBetween(String value1, String value2) {
            addCriterion("PluginId not between", value1, value2, "pluginId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdIsNull() {
            addCriterion("WatchFolderId is null");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdIsNotNull() {
            addCriterion("WatchFolderId is not null");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdEqualTo(String value) {
            addCriterion("WatchFolderId =", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdNotEqualTo(String value) {
            addCriterion("WatchFolderId <>", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdGreaterThan(String value) {
            addCriterion("WatchFolderId >", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdGreaterThanOrEqualTo(String value) {
            addCriterion("WatchFolderId >=", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdLessThan(String value) {
            addCriterion("WatchFolderId <", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdLessThanOrEqualTo(String value) {
            addCriterion("WatchFolderId <=", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdLike(String value) {
            addCriterion("WatchFolderId like", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdNotLike(String value) {
            addCriterion("WatchFolderId not like", value, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdIn(List<String> values) {
            addCriterion("WatchFolderId in", values, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdNotIn(List<String> values) {
            addCriterion("WatchFolderId not in", values, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdBetween(String value1, String value2) {
            addCriterion("WatchFolderId between", value1, value2, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andWatchFolderIdNotBetween(String value1, String value2) {
            addCriterion("WatchFolderId not between", value1, value2, "watchFolderId");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeIsNull() {
            addCriterion("PhaseType is null");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeIsNotNull() {
            addCriterion("PhaseType is not null");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeEqualTo(String value) {
            addCriterion("PhaseType =", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeNotEqualTo(String value) {
            addCriterion("PhaseType <>", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeGreaterThan(String value) {
            addCriterion("PhaseType >", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PhaseType >=", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeLessThan(String value) {
            addCriterion("PhaseType <", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeLessThanOrEqualTo(String value) {
            addCriterion("PhaseType <=", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeLike(String value) {
            addCriterion("PhaseType like", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeNotLike(String value) {
            addCriterion("PhaseType not like", value, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeIn(List<String> values) {
            addCriterion("PhaseType in", values, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeNotIn(List<String> values) {
            addCriterion("PhaseType not in", values, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeBetween(String value1, String value2) {
            addCriterion("PhaseType between", value1, value2, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPhaseTypeNotBetween(String value1, String value2) {
            addCriterion("PhaseType not between", value1, value2, "phaseType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeIsNull() {
            addCriterion("PluginType is null");
            return (Criteria) this;
        }

        public Criteria andPluginTypeIsNotNull() {
            addCriterion("PluginType is not null");
            return (Criteria) this;
        }

        public Criteria andPluginTypeEqualTo(String value) {
            addCriterion("PluginType =", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeNotEqualTo(String value) {
            addCriterion("PluginType <>", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeGreaterThan(String value) {
            addCriterion("PluginType >", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PluginType >=", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeLessThan(String value) {
            addCriterion("PluginType <", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeLessThanOrEqualTo(String value) {
            addCriterion("PluginType <=", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeLike(String value) {
            addCriterion("PluginType like", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeNotLike(String value) {
            addCriterion("PluginType not like", value, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeIn(List<String> values) {
            addCriterion("PluginType in", values, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeNotIn(List<String> values) {
            addCriterion("PluginType not in", values, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeBetween(String value1, String value2) {
            addCriterion("PluginType between", value1, value2, "pluginType");
            return (Criteria) this;
        }

        public Criteria andPluginTypeNotBetween(String value1, String value2) {
            addCriterion("PluginType not between", value1, value2, "pluginType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 13 11:34:31 PDT 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WatchFolderPlugins
     *
     * @mbggenerated Tue Mar 13 11:34:31 PDT 2012
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}