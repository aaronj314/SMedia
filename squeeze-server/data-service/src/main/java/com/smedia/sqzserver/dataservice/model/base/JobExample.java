package com.smedia.sqzserver.dataservice.model.base;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class JobExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public JobExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andJobIdIsNull() {
            addCriterion("JobId is null");
            return (Criteria) this;
        }

        public Criteria andJobIdIsNotNull() {
            addCriterion("JobId is not null");
            return (Criteria) this;
        }

        public Criteria andJobIdEqualTo(String value) {
            addCriterion("JobId =", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotEqualTo(String value) {
            addCriterion("JobId <>", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThan(String value) {
            addCriterion("JobId >", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdGreaterThanOrEqualTo(String value) {
            addCriterion("JobId >=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThan(String value) {
            addCriterion("JobId <", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLessThanOrEqualTo(String value) {
            addCriterion("JobId <=", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdLike(String value) {
            addCriterion("JobId like", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotLike(String value) {
            addCriterion("JobId not like", value, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdIn(List<String> values) {
            addCriterion("JobId in", values, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotIn(List<String> values) {
            addCriterion("JobId not in", values, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdBetween(String value1, String value2) {
            addCriterion("JobId between", value1, value2, "jobId");
            return (Criteria) this;
        }

        public Criteria andJobIdNotBetween(String value1, String value2) {
            addCriterion("JobId not between", value1, value2, "jobId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("Name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("Name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("Name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("Name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("Name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("Name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("Name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("Name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("Name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("Name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("Name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("Name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("Name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("Name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallIsNull() {
            addCriterion("PercentCompleteOverall is null");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallIsNotNull() {
            addCriterion("PercentCompleteOverall is not null");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallEqualTo(Float value) {
            addCriterion("PercentCompleteOverall =", value, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallNotEqualTo(Float value) {
            addCriterion("PercentCompleteOverall <>", value, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallGreaterThan(Float value) {
            addCriterion("PercentCompleteOverall >", value, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallGreaterThanOrEqualTo(Float value) {
            addCriterion("PercentCompleteOverall >=", value, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallLessThan(Float value) {
            addCriterion("PercentCompleteOverall <", value, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallLessThanOrEqualTo(Float value) {
            addCriterion("PercentCompleteOverall <=", value, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallIn(List<Float> values) {
            addCriterion("PercentCompleteOverall in", values, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallNotIn(List<Float> values) {
            addCriterion("PercentCompleteOverall not in", values, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallBetween(Float value1, Float value2) {
            addCriterion("PercentCompleteOverall between", value1, value2, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andPercentCompleteOverallNotBetween(Float value1, Float value2) {
            addCriterion("PercentCompleteOverall not between", value1, value2, "percentCompleteOverall");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdIsNull() {
            addCriterion("StatusStateId is null");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdIsNotNull() {
            addCriterion("StatusStateId is not null");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdEqualTo(Integer value) {
            addCriterion("StatusStateId =", value, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdNotEqualTo(Integer value) {
            addCriterion("StatusStateId <>", value, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdGreaterThan(Integer value) {
            addCriterion("StatusStateId >", value, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("StatusStateId >=", value, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdLessThan(Integer value) {
            addCriterion("StatusStateId <", value, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdLessThanOrEqualTo(Integer value) {
            addCriterion("StatusStateId <=", value, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdIn(List<Integer> values) {
            addCriterion("StatusStateId in", values, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdNotIn(List<Integer> values) {
            addCriterion("StatusStateId not in", values, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdBetween(Integer value1, Integer value2) {
            addCriterion("StatusStateId between", value1, value2, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andStatusStateIdNotBetween(Integer value1, Integer value2) {
            addCriterion("StatusStateId not between", value1, value2, "statusStateId");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedIsNull() {
            addCriterion("TimeSubmitted is null");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedIsNotNull() {
            addCriterion("TimeSubmitted is not null");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedEqualTo(Date value) {
            addCriterion("TimeSubmitted =", value, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedNotEqualTo(Date value) {
            addCriterion("TimeSubmitted <>", value, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedGreaterThan(Date value) {
            addCriterion("TimeSubmitted >", value, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedGreaterThanOrEqualTo(Date value) {
            addCriterion("TimeSubmitted >=", value, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedLessThan(Date value) {
            addCriterion("TimeSubmitted <", value, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedLessThanOrEqualTo(Date value) {
            addCriterion("TimeSubmitted <=", value, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedIn(List<Date> values) {
            addCriterion("TimeSubmitted in", values, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedNotIn(List<Date> values) {
            addCriterion("TimeSubmitted not in", values, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedBetween(Date value1, Date value2) {
            addCriterion("TimeSubmitted between", value1, value2, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeSubmittedNotBetween(Date value1, Date value2) {
            addCriterion("TimeSubmitted not between", value1, value2, "timeSubmitted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedIsNull() {
            addCriterion("TimeStarted is null");
            return (Criteria) this;
        }

        public Criteria andTimeStartedIsNotNull() {
            addCriterion("TimeStarted is not null");
            return (Criteria) this;
        }

        public Criteria andTimeStartedEqualTo(Date value) {
            addCriterion("TimeStarted =", value, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedNotEqualTo(Date value) {
            addCriterion("TimeStarted <>", value, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedGreaterThan(Date value) {
            addCriterion("TimeStarted >", value, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedGreaterThanOrEqualTo(Date value) {
            addCriterion("TimeStarted >=", value, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedLessThan(Date value) {
            addCriterion("TimeStarted <", value, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedLessThanOrEqualTo(Date value) {
            addCriterion("TimeStarted <=", value, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedIn(List<Date> values) {
            addCriterion("TimeStarted in", values, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedNotIn(List<Date> values) {
            addCriterion("TimeStarted not in", values, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedBetween(Date value1, Date value2) {
            addCriterion("TimeStarted between", value1, value2, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeStartedNotBetween(Date value1, Date value2) {
            addCriterion("TimeStarted not between", value1, value2, "timeStarted");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedIsNull() {
            addCriterion("TimeFinished is null");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedIsNotNull() {
            addCriterion("TimeFinished is not null");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedEqualTo(Date value) {
            addCriterion("TimeFinished =", value, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedNotEqualTo(Date value) {
            addCriterion("TimeFinished <>", value, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedGreaterThan(Date value) {
            addCriterion("TimeFinished >", value, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedGreaterThanOrEqualTo(Date value) {
            addCriterion("TimeFinished >=", value, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedLessThan(Date value) {
            addCriterion("TimeFinished <", value, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedLessThanOrEqualTo(Date value) {
            addCriterion("TimeFinished <=", value, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedIn(List<Date> values) {
            addCriterion("TimeFinished in", values, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedNotIn(List<Date> values) {
            addCriterion("TimeFinished not in", values, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedBetween(Date value1, Date value2) {
            addCriterion("TimeFinished between", value1, value2, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andTimeFinishedNotBetween(Date value1, Date value2) {
            addCriterion("TimeFinished not between", value1, value2, "timeFinished");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeIsNull() {
            addCriterion("LastPingTime is null");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeIsNotNull() {
            addCriterion("LastPingTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeEqualTo(Date value) {
            addCriterion("LastPingTime =", value, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeNotEqualTo(Date value) {
            addCriterion("LastPingTime <>", value, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeGreaterThan(Date value) {
            addCriterion("LastPingTime >", value, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LastPingTime >=", value, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeLessThan(Date value) {
            addCriterion("LastPingTime <", value, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeLessThanOrEqualTo(Date value) {
            addCriterion("LastPingTime <=", value, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeIn(List<Date> values) {
            addCriterion("LastPingTime in", values, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeNotIn(List<Date> values) {
            addCriterion("LastPingTime not in", values, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeBetween(Date value1, Date value2) {
            addCriterion("LastPingTime between", value1, value2, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andLastPingTimeNotBetween(Date value1, Date value2) {
            addCriterion("LastPingTime not between", value1, value2, "lastPingTime");
            return (Criteria) this;
        }

        public Criteria andErrorCodeIsNull() {
            addCriterion("ErrorCode is null");
            return (Criteria) this;
        }

        public Criteria andErrorCodeIsNotNull() {
            addCriterion("ErrorCode is not null");
            return (Criteria) this;
        }

        public Criteria andErrorCodeEqualTo(String value) {
            addCriterion("ErrorCode =", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeNotEqualTo(String value) {
            addCriterion("ErrorCode <>", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeGreaterThan(String value) {
            addCriterion("ErrorCode >", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeGreaterThanOrEqualTo(String value) {
            addCriterion("ErrorCode >=", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeLessThan(String value) {
            addCriterion("ErrorCode <", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeLessThanOrEqualTo(String value) {
            addCriterion("ErrorCode <=", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeLike(String value) {
            addCriterion("ErrorCode like", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeNotLike(String value) {
            addCriterion("ErrorCode not like", value, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeIn(List<String> values) {
            addCriterion("ErrorCode in", values, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeNotIn(List<String> values) {
            addCriterion("ErrorCode not in", values, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeBetween(String value1, String value2) {
            addCriterion("ErrorCode between", value1, value2, "errorCode");
            return (Criteria) this;
        }

        public Criteria andErrorCodeNotBetween(String value1, String value2) {
            addCriterion("ErrorCode not between", value1, value2, "errorCode");
            return (Criteria) this;
        }

        public Criteria andStatusNameIsNull() {
            addCriterion("StatusName is null");
            return (Criteria) this;
        }

        public Criteria andStatusNameIsNotNull() {
            addCriterion("StatusName is not null");
            return (Criteria) this;
        }

        public Criteria andStatusNameEqualTo(String value) {
            addCriterion("StatusName =", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameNotEqualTo(String value) {
            addCriterion("StatusName <>", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameGreaterThan(String value) {
            addCriterion("StatusName >", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameGreaterThanOrEqualTo(String value) {
            addCriterion("StatusName >=", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameLessThan(String value) {
            addCriterion("StatusName <", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameLessThanOrEqualTo(String value) {
            addCriterion("StatusName <=", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameLike(String value) {
            addCriterion("StatusName like", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameNotLike(String value) {
            addCriterion("StatusName not like", value, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameIn(List<String> values) {
            addCriterion("StatusName in", values, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameNotIn(List<String> values) {
            addCriterion("StatusName not in", values, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameBetween(String value1, String value2) {
            addCriterion("StatusName between", value1, value2, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusNameNotBetween(String value1, String value2) {
            addCriterion("StatusName not between", value1, value2, "statusName");
            return (Criteria) this;
        }

        public Criteria andStatusMessageIsNull() {
            addCriterion("StatusMessage is null");
            return (Criteria) this;
        }

        public Criteria andStatusMessageIsNotNull() {
            addCriterion("StatusMessage is not null");
            return (Criteria) this;
        }

        public Criteria andStatusMessageEqualTo(String value) {
            addCriterion("StatusMessage =", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageNotEqualTo(String value) {
            addCriterion("StatusMessage <>", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageGreaterThan(String value) {
            addCriterion("StatusMessage >", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageGreaterThanOrEqualTo(String value) {
            addCriterion("StatusMessage >=", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageLessThan(String value) {
            addCriterion("StatusMessage <", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageLessThanOrEqualTo(String value) {
            addCriterion("StatusMessage <=", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageLike(String value) {
            addCriterion("StatusMessage like", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageNotLike(String value) {
            addCriterion("StatusMessage not like", value, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageIn(List<String> values) {
            addCriterion("StatusMessage in", values, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageNotIn(List<String> values) {
            addCriterion("StatusMessage not in", values, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageBetween(String value1, String value2) {
            addCriterion("StatusMessage between", value1, value2, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andStatusMessageNotBetween(String value1, String value2) {
            addCriterion("StatusMessage not between", value1, value2, "statusMessage");
            return (Criteria) this;
        }

        public Criteria andInPointIsNull() {
            addCriterion("InPoint is null");
            return (Criteria) this;
        }

        public Criteria andInPointIsNotNull() {
            addCriterion("InPoint is not null");
            return (Criteria) this;
        }

        public Criteria andInPointEqualTo(Double value) {
            addCriterion("InPoint =", value, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointNotEqualTo(Double value) {
            addCriterion("InPoint <>", value, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointGreaterThan(Double value) {
            addCriterion("InPoint >", value, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointGreaterThanOrEqualTo(Double value) {
            addCriterion("InPoint >=", value, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointLessThan(Double value) {
            addCriterion("InPoint <", value, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointLessThanOrEqualTo(Double value) {
            addCriterion("InPoint <=", value, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointIn(List<Double> values) {
            addCriterion("InPoint in", values, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointNotIn(List<Double> values) {
            addCriterion("InPoint not in", values, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointBetween(Double value1, Double value2) {
            addCriterion("InPoint between", value1, value2, "inPoint");
            return (Criteria) this;
        }

        public Criteria andInPointNotBetween(Double value1, Double value2) {
            addCriterion("InPoint not between", value1, value2, "inPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointIsNull() {
            addCriterion("OutPoint is null");
            return (Criteria) this;
        }

        public Criteria andOutPointIsNotNull() {
            addCriterion("OutPoint is not null");
            return (Criteria) this;
        }

        public Criteria andOutPointEqualTo(Double value) {
            addCriterion("OutPoint =", value, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointNotEqualTo(Double value) {
            addCriterion("OutPoint <>", value, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointGreaterThan(Double value) {
            addCriterion("OutPoint >", value, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointGreaterThanOrEqualTo(Double value) {
            addCriterion("OutPoint >=", value, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointLessThan(Double value) {
            addCriterion("OutPoint <", value, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointLessThanOrEqualTo(Double value) {
            addCriterion("OutPoint <=", value, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointIn(List<Double> values) {
            addCriterion("OutPoint in", values, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointNotIn(List<Double> values) {
            addCriterion("OutPoint not in", values, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointBetween(Double value1, Double value2) {
            addCriterion("OutPoint between", value1, value2, "outPoint");
            return (Criteria) this;
        }

        public Criteria andOutPointNotBetween(Double value1, Double value2) {
            addCriterion("OutPoint not between", value1, value2, "outPoint");
            return (Criteria) this;
        }

        public Criteria andThumbTimeIsNull() {
            addCriterion("ThumbTime is null");
            return (Criteria) this;
        }

        public Criteria andThumbTimeIsNotNull() {
            addCriterion("ThumbTime is not null");
            return (Criteria) this;
        }

        public Criteria andThumbTimeEqualTo(Double value) {
            addCriterion("ThumbTime =", value, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeNotEqualTo(Double value) {
            addCriterion("ThumbTime <>", value, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeGreaterThan(Double value) {
            addCriterion("ThumbTime >", value, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeGreaterThanOrEqualTo(Double value) {
            addCriterion("ThumbTime >=", value, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeLessThan(Double value) {
            addCriterion("ThumbTime <", value, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeLessThanOrEqualTo(Double value) {
            addCriterion("ThumbTime <=", value, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeIn(List<Double> values) {
            addCriterion("ThumbTime in", values, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeNotIn(List<Double> values) {
            addCriterion("ThumbTime not in", values, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeBetween(Double value1, Double value2) {
            addCriterion("ThumbTime between", value1, value2, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andThumbTimeNotBetween(Double value1, Double value2) {
            addCriterion("ThumbTime not between", value1, value2, "thumbTime");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameIsNull() {
            addCriterion("WatchFolderName is null");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameIsNotNull() {
            addCriterion("WatchFolderName is not null");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameEqualTo(String value) {
            addCriterion("WatchFolderName =", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameNotEqualTo(String value) {
            addCriterion("WatchFolderName <>", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameGreaterThan(String value) {
            addCriterion("WatchFolderName >", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameGreaterThanOrEqualTo(String value) {
            addCriterion("WatchFolderName >=", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameLessThan(String value) {
            addCriterion("WatchFolderName <", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameLessThanOrEqualTo(String value) {
            addCriterion("WatchFolderName <=", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameLike(String value) {
            addCriterion("WatchFolderName like", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameNotLike(String value) {
            addCriterion("WatchFolderName not like", value, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameIn(List<String> values) {
            addCriterion("WatchFolderName in", values, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameNotIn(List<String> values) {
            addCriterion("WatchFolderName not in", values, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameBetween(String value1, String value2) {
            addCriterion("WatchFolderName between", value1, value2, "watchFolderName");
            return (Criteria) this;
        }

        public Criteria andWatchFolderNameNotBetween(String value1, String value2) {
            addCriterion("WatchFolderName not between", value1, value2, "watchFolderName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Jobs
     *
     * @mbggenerated do_not_delete_during_merge Sun Jan 01 09:09:58 PST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Jobs
     *
     * @mbggenerated Sun Jan 01 09:09:58 PST 2012
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}